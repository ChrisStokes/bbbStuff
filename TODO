Firmware:
  rename all the device overlays

Hardware:
  look into 12V switching regulator for solenoids and pressure sensors
  Map out cable runs
  Get in touch with GlenAir about conduit
  Figure out connectors for solenoids
  choose Beaglebone enclosures
  3D print magnetic encoder enclosures
  Update Cape board
  Finish Magnetic Encoder board
  Build manual override controller
  Put together server
  Get a switch
  Get server running
  Figure out requirements and design engine controller Beaglebone
    - pump bypass valves
      - two PWM's 
    - hydraulic temperature sensor
    - engine temperature sensor
    - tachometer
    - alternator control???

Software:
  pull out the deadband parameters from closed loop test
  centralize all the parameters, a model file probably
  determine how to do calibration and document it
  write calibration scripts
  make realtime graphing (over the network)  (maybe graphite?)
  start thinking about interfacing with the existing code
  start thinking about a UI  (LOW)
  document a comm protocol
  hook up all the networking code
  do the physics
  add force inputs to BBB code
  import the gate code and the IK
  import the joystick code
  enforce speed ramps at all times
  port SoftStopAwareSpeedManager to python, integrate
  make E stop
  write server code
  get SPI working and reading magnetic encoders
  translate joystick input into gait commands (existing code?)
  throttle control 
  pump control
  fan control
  Calibration for magnetic encoders
  Talk to IMU (existing code?)
  Calibrate IMU 
